{"ast":null,"code":"var _jsxFileName = \"/Users/costescu/Desktop/Programare/react/weather2/src/components/DayWeather.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCloudSun } from '@fortawesome/free-solid-svg-icons';\nimport './DayWeather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DayWeather = _ref => {\n  let {\n    data,\n    temperatureC,\n    temperatureK\n  } = _ref;\n  const day = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  const day_w = () => {\n    if (data) {\n      var date = new Date(data.forecast.forecastday[0].date);\n      var weekday = date.getDay();\n      return day[weekday];\n    }\n  };\n\n  const month = () => {\n    if (data) {\n      var date = new Date(data.forecast.forecastday[0].date);\n      var weekday = date.getMonth();\n      return months[weekday];\n    }\n  };\n\n  const hours = () => {\n    if (data) {\n      var date = new Date(data.forecast.forecastday[0].date);\n      var weekday = date.toLocaleTimeString()();\n      return hours;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-box\",\n    children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"box-date\",\n        children: data.location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"box-2\",\n        children: [day_w(), \", 22 \", month(), \" 12:20\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this), temperatureC && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"temp-principal\",\n        children: [data.current.temp_c, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }, this), temperatureK && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"temp-principal\",\n        children: [data.current.temp_f, \"\\xB0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"condition\",\n        children: data.current.condition.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DayWeather;\nexport default DayWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayWeather\");","map":{"version":3,"sources":["/Users/costescu/Desktop/Programare/react/weather2/src/components/DayWeather.js"],"names":["React","FontAwesomeIcon","faCloudSun","DayWeather","data","temperatureC","temperatureK","day","months","day_w","date","Date","forecast","forecastday","weekday","getDay","month","getMonth","hours","toLocaleTimeString","location","name","current","temp_c","temp_f","condition","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAG,QAAwC;AAAA,MAAvC;AAACC,IAAAA,IAAD;AAAOC,IAAAA,YAAP;AAAqBC,IAAAA;AAArB,GAAuC;AAEvD,QAAMC,GAAG,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAZ;AACA,QAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;;AACA,QAAMC,KAAK,GAAG,MAAM;AAChB,QAAGL,IAAH,EAAQ;AACN,UAAIM,IAAI,GAAG,IAAIC,IAAJ,CAASP,IAAI,CAACQ,QAAL,CAAcC,WAAd,CAA0B,CAA1B,EAA6BH,IAAtC,CAAX;AACA,UAAII,OAAO,GAAGJ,IAAI,CAACK,MAAL,EAAd;AACA,aACER,GAAG,CAACO,OAAD,CADL;AAGD;AACF,GARH;;AAUE,QAAME,KAAK,GAAG,MAAM;AAClB,QAAGZ,IAAH,EAAQ;AACN,UAAIM,IAAI,GAAG,IAAIC,IAAJ,CAASP,IAAI,CAACQ,QAAL,CAAcC,WAAd,CAA0B,CAA1B,EAA6BH,IAAtC,CAAX;AACA,UAAII,OAAO,GAAGJ,IAAI,CAACO,QAAL,EAAd;AACA,aACET,MAAM,CAACM,OAAD,CADR;AAGD;AACF,GARD;;AAUA,QAAMI,KAAK,GAAG,MAAM;AAClB,QAAGd,IAAH,EAAQ;AACN,UAAIM,IAAI,GAAG,IAAIC,IAAJ,CAASP,IAAI,CAACQ,QAAL,CAAcC,WAAd,CAA0B,CAA1B,EAA6BH,IAAtC,CAAX;AACA,UAAII,OAAO,GAAGJ,IAAI,CAACS,kBAAL,IAAd;AACA,aACED,KADF;AAGD;AACF,GARD;;AAUF,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKd,IAAI,iBACL;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,UAAb;AAAA,kBAAyBA,IAAI,CAACgB,QAAL,CAAcC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA,mBAAsBZ,KAAK,EAA3B,WAAoCO,KAAK,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGX,YAAY,iBAAI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,mBAA+BD,IAAI,CAACkB,OAAL,CAAaC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAHnB,EAIGjB,YAAY,iBAAI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,mBAA+BF,IAAI,CAACkB,OAAL,CAAaE,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAJnB,eAKE;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA,kBAA0BpB,IAAI,CAACkB,OAAL,CAAaG,SAAb,CAAuBC;AAAjD;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhDD;;KAAMvB,U;AAkDN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCloudSun } from '@fortawesome/free-solid-svg-icons'\nimport './DayWeather.css'\n\nconst DayWeather = ({data, temperatureC, temperatureK}) => {\n\n    const day = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const day_w = () => {\n        if(data){\n          var date = new Date(data.forecast.forecastday[0].date);\n          var weekday = date.getDay();\n          return (\n            day[weekday]\n          )\n        }\n      }\n\n      const month = () => {\n        if(data){\n          var date = new Date(data.forecast.forecastday[0].date);\n          var weekday = date.getMonth();\n          return (\n            months[weekday]\n          )\n        }\n      }\n\n      const hours = () => {\n        if(data){\n          var date = new Date(data.forecast.forecastday[0].date);\n          var weekday = date.toLocaleTimeString()();\n          return (\n            hours\n          )\n        }\n      }\n\n    return (\n        <div className='weather-box'>\n            {data && \n            <div className=\"box\">\n              <p className=\"box-date\">{data.location.name}</p>\n              <p className=\"box-2\">{day_w()}, 22 {month()} 12:20</p>\n              {temperatureC && <p className='temp-principal'>{data.current.temp_c}°</p>}\n              {temperatureK && <p className='temp-principal'>{data.current.temp_f}°</p>}\n              <p className='condition'>{data.current.condition.text}</p>\n                \n            </div>\n            }\n        </div>\n    )\n}\n\nexport default DayWeather\n"]},"metadata":{},"sourceType":"module"}