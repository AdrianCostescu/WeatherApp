{"ast":null,"code":"var _jsxFileName = \"/Users/costescu/Desktop/Programare/react/weather2/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [city, setCity] = useState(\"\");\n  const day = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  const submitHandler = e => {\n    if (e.key === 'Enter') {\n      fetch('http://api.weatherapi.com/v1/forecast.json?key=fff7d45bd3bf4a2fbfd135016210811&q=' + city + '&days=10&aqi=yes&alerts=yes').then(res => res.json()).then(res => {\n        setData(res);\n        console.log(res);\n      });\n    }\n  };\n\n  const day_w = () => {\n    if (data) {\n      var date = new Date(data.forecast.forecastday[0].date);\n      var weekday = date.getDay();\n      return day[weekday];\n    }\n  };\n\n  const month_w = () => {\n    if (data) {\n      var date = new Date(data.forecast.forecastday[0].date);\n      var month = date.getMonth();\n      return months[month];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-box\",\n      children: data && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-w\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"temp\",\n          children: [data.current.temp_c, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"condition\",\n          children: data.current.condition.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.current.last_updated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: day_w()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: month_w()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [\"Component\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"serch-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"search-bar\",\n          type: \"text\",\n          onChange: e => setCity(e.target.value),\n          value: city,\n          placeholder: \"Cautare..\",\n          onKeyPress: submitHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sVy0LWM2HpeSSH4HI+A1B6bDa7w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/costescu/Desktop/Programare/react/weather2/src/App.js"],"names":["useState","App","data","setData","city","setCity","day","months","submitHandler","e","key","fetch","then","res","json","console","log","day_w","date","Date","forecast","forecastday","weekday","getDay","month_w","month","getMonth","current","temp_c","condition","text","last_updated","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useState } from 'react'\n\nfunction App() {\n\n  const [data, setData] = useState(null);\n  const [city, setCity] = useState(\"\");\n\n  const day = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n  \n  const submitHandler = (e) => {\n    \n    if (e.key === 'Enter'){\n      fetch('http://api.weatherapi.com/v1/forecast.json?key=fff7d45bd3bf4a2fbfd135016210811&q=' + city + '&days=10&aqi=yes&alerts=yes')\n      .then(res => res.json())\n      .then(res => {\n        setData(res)\n        console.log(res);\n      });\n    }\n  }  \n\n  const day_w = () => {\n    if(data){\n      var date = new Date(data.forecast.forecastday[0].date);\n      var weekday = date.getDay();\n      return (\n        day[weekday]\n      )\n    }\n  }\n\n  const month_w = () => {\n    if(data){\n      var date = new Date(data.forecast.forecastday[0].date);\n      var month = date.getMonth();\n      return (\n        months[month]\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n\n        <div className='weather-box'>\n            {data && \n            <div className=\"content-w\">\n              <p className=\"temp\">{data.current.temp_c}Â°</p>\n              <p className=\"condition\">{data.current.condition.text}</p>\n              <p>{data.current.last_updated}</p>\n              <p>{day_w()}</p>\n              <p>{month_w()}</p>\n            </div>\n            }\n        </div>\n\n\n        <div className='component'>\n          Component\n          <div className='serch-box'>\n            <input\n            className=\"search-bar\"\n            type=\"text\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}  \n            placeholder=\"Cautare..\"\n            onKeyPress={submitHandler}\n            />\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}