{"ast":null,"code":"var _jsxFileName = \"/Users/costescu/Desktop/Programare/react/weather2/src/App.js\",\n    _s = $RefreshSig$();\n\n// npx json-server --watch db/db.json --port 8000\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport DayWeather from './components/DayWeather';\nimport SearchBox from './components/SearchBox';\nimport Favorite from './components/Favorite';\nimport Details from './components/Details';\nimport Setings from './components/Setings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [city, setCity] = useState(\"Suceava\");\n  const [search, setSearch] = useState(false);\n  const [favorite, setFavorite] = useState('');\n  const [click, setClick] = useState(false);\n  const [temperatureC, setTemperatureC] = useState(true);\n  const [temperatureK, setTemperatureK] = useState(false);\n  const [windK, setWindK] = useState(true);\n  const [windM, setWindM] = useState(false);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  useEffect(() => {\n    fetch('http://api.weatherapi.com/v1/forecast.json?key=fff7d45bd3bf4a2fbfd135016210811&q=' + city + '&days=10&aqi=yes&alerts=yes').then(res => res.json()).then(res => {\n      setData(res);\n      console.log(res);\n      setClick(false);\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://localhost:8000/data').then(res => res.json()).then(res => {\n      setFavorite(res);\n      console.log(res);\n    });\n  }, [city]);\n\n  const month_w = () => {\n    if (data) {\n      var date = new Date(data.forecast.forecastday[0].date);\n      var month = date.getMonth();\n      return months[month];\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DayWeather, {\n      data: data,\n      temperatureC: temperatureC,\n      temperatureK: temperatureK\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBox, {\n        city: city,\n        click: click,\n        setClick: setClick,\n        search: search,\n        setSearch: setSearch,\n        setCity: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Favorite, {\n        favorite: favorite,\n        city: city,\n        setCity: setCity,\n        setClick: setClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Details, {\n        data: data,\n        temperatureC: temperatureC,\n        temperatureK: temperatureK,\n        windM: windM,\n        windK: windK\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Setings, {\n        temperatureC: temperatureC,\n        setTemperatureC: setTemperatureC,\n        temperatureK: temperatureK,\n        setTemperatureK: setTemperatureK,\n        windK: windK,\n        setWindK: setWindK,\n        windM: windM,\n        setWindM: setWindM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vmjZNRLVN7qenT8Dfwk3VVPnNn4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/costescu/Desktop/Programare/react/weather2/src/App.js"],"names":["useState","useEffect","DayWeather","SearchBox","Favorite","Details","Setings","App","data","setData","city","setCity","search","setSearch","favorite","setFavorite","click","setClick","temperatureC","setTemperatureC","temperatureK","setTemperatureK","windK","setWindK","windM","setWindM","months","fetch","then","res","json","console","log","month_w","date","Date","forecast","forecastday","month","getMonth"],"mappings":"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","sourcesContent":["// npx json-server --watch db/db.json --port 8000\nimport './App.css';\nimport { useState, useEffect } from 'react'\nimport DayWeather from './components/DayWeather';\nimport SearchBox from './components/SearchBox';\nimport Favorite from './components/Favorite';\nimport Details from './components/Details';\nimport Setings from './components/Setings';\n\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [city, setCity] = useState(\"Suceava\");\n  const [search, setSearch] = useState(false);\n  const [favorite, setFavorite] = useState('');\n  const [click, setClick] = useState(false);\n  const [temperatureC, setTemperatureC] = useState(true);\n  const [temperatureK, setTemperatureK] = useState(false);\n  const [windK, setWindK] = useState(true);\n  const [windM, setWindM] = useState(false);\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  \n\n  useEffect(() => {\n    fetch('http://api.weatherapi.com/v1/forecast.json?key=fff7d45bd3bf4a2fbfd135016210811&q=' + city + '&days=10&aqi=yes&alerts=yes')\n      .then(res => res.json())\n      .then(res => {\n        setData(res)\n        console.log(res);\n        setClick(false);\n      });\n  },[])\n\n    useEffect(() =>{\n      fetch('http://localhost:8000/data')\n      .then(res => res.json())\n      .then(res => {\n        setFavorite(res);\n        console.log(res);\n      });\n    }, [city])\n\n  const month_w = () => {\n    if(data){\n      var date = new Date(data.forecast.forecastday[0].date);\n      var month = date.getMonth();\n      return (\n        months[month]\n      )\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <DayWeather data = {data} temperatureC = {temperatureC} temperatureK = {temperatureK}/>\n        <div className='component'>\n          <SearchBox city = {city} click = {click} setClick = {setClick} search = {search} setSearch = {setSearch} setCity = {setCity}/>\n          <Favorite favorite = {favorite} city = {city} setCity = {setCity} setClick = {setClick}/>\n          <Details data = {data} temperatureC = {temperatureC} temperatureK = {temperatureK} windM = {windM} windK = {windK}/>\n          <Setings temperatureC = {temperatureC} setTemperatureC = {setTemperatureC} temperatureK = {temperatureK} setTemperatureK = {setTemperatureK} windK = {windK} setWindK = {setWindK} windM = {windM} setWindM = {setWindM} />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}